# -*- coding: utf-8 -*-
"""EDA_criminalIncidence.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1N-FNsgWoNJrLPNd66VROmoJrcaqxBzBj

## Downloading dataset
"""

!curl https://trello-attachments.s3.amazonaws.com/5e7ab7849f172231e1d8b386/5e7d5e0fec43d718240c71c7/cbf8668259455adfbabd3f686e410b41/incidencia_delictiva_jalisco18-19_filter.csv -O

"""## Importing libraries"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('incidencia_delictiva_jalisco18-19_filter.csv')
df

municipalities = ["GUADALAJARA", "ZAPOPAN", "SAN PEDRO TLAQUEPAQUE"]

gdl_metro_area = df[df["Municipio"].isin(municipalities)]

gdl_metro_area["Localidad"].value_counts()

gdl_metro_area["Colonia"].value_counts()

plt.figure(figsize=(15,5))
sns.countplot(x="Municipio", data=gdl_metro_area, order = gdl_metro_area['Municipio'].value_counts().index)

plt.xticks(
    fontweight='light',
    fontsize='x-large'  
)

plt.yticks(
    fontweight='light',
    fontsize='x-large'
)

"""Dividir por cantidad de habitantes"""

plt.figure(figsize=(15,5))

chart = sns.catplot(
    x="Municipio",
    kind="count",
    data=gdl_metro_area,
    row="Año",
    aspect=4,
    height=3
)


plt.xticks(
    fontweight='light',
    fontsize='x-large'  
)

for axes in chart.axes.flat:
    axes.set_yticklabels(axes.get_yticklabels(), fontweight='light', fontsize='x-large')

plt.figure(figsize=(15,5))
sns.countplot(x="Delito", data=gdl_metro_area, order = gdl_metro_area['Delito'].value_counts().index)

plt.xticks(
    rotation=45, 
    horizontalalignment='right',
    fontweight='light',
    fontsize='x-large'  
)

plt.yticks(
    fontweight='light',
    fontsize='x-large'
)

"""Calcular porcentaje de cambio = cant 2019 - cant 2018 / cant 2018
Factor de corrección estadístico (técnicas de muestreo y estimación)
"""

plt.figure(figsize=(15,5))

chart = sns.catplot(
    x="Delito",
    kind="count",
    data=gdl_metro_area,
    row="Municipio",
    col="Año",
    aspect=2,
    height=3
)


for axes in chart.axes.flat:
    axes.set_xticklabels(axes.get_xticklabels(), rotation=65, horizontalalignment='right')